/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classroom.helper;

import java.awt.Component;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.LinkedList;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ianmoore
 */
public class SetPromptStatuses extends javax.swing.JPanel {

    private ClassroomHelper app;
    private ClassS classS;
    private ClassHome homepage;
    private JPanel lastPage;
    private GUIFrame baseFrame;
    private String type;
    private Object[][] data;
    private ArrayList<Prompt> prompts;
    private boolean changesMade;
    
    public SetPromptStatuses(ClassroomHelper appl, ClassS cla, ClassHome home, JPanel last, GUIFrame frame, String ty) {
        app = appl;
        classS = cla;
        homepage = home;
        lastPage = last;
        baseFrame = frame;
        type = ty;
        baseFrame.setContentPane(this);
        initComponents();
        if(type.equals("SAQ")) {
            prompts = classS.getSAQs();
        } else {
            prompts = classS.getERQs();
        }
        addPromptDataToTable();
        saveValsB.setEnabled(false);
        jTable1.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if(jTable1.getColumnModel().getColumnIndexAtX(e.getX()) == 1) {
                    saveValsB.setEnabled(true);
                    jTable1.removeMouseListener(this);
                }
            }

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        saveValsB = new javax.swing.JButton();
        lastPageB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prompt", "Answered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(204, 204, 204));
        jTable1.setMixingCutoutShape(null);
        jTable1.setRowHeight(36);
        jTable1.setRowSelectionAllowed(false);
        jTable1.setShowGrid(true);
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(600);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(new TextWrapRenderer());
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        saveValsB.setText("Save");
        saveValsB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveValsBActionPerformed(evt);
            }
        });

        lastPageB.setText("Back");
        lastPageB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastPageBActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 25)); // NOI18N
        jLabel1.setText("Set " + type + " Prompt Statuses");

        jLabel2.setText("<HTML>All " + classS.getLvl() + " " + type + "s are shown. Click the checkbox next to a prompt to mark it as answered/unanswered for this section. Answered prompts cannot be selected in the prompt chooser.</HTML>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastPageB)
                            .addComponent(saveValsB))
                        .addGap(15, 15, 15))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastPageB)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(saveValsB)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveValsBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveValsBActionPerformed
        for(int i = 0; i < prompts.size(); i++) {
            prompts.get(i).setIsAns((boolean) jTable1.getValueAt(i, 1));
        }
        app.getCurSxn().updateSxnProData();
        baseFrame.setContentPane(lastPage);
    }//GEN-LAST:event_saveValsBActionPerformed

    private void lastPageBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastPageBActionPerformed
        baseFrame.setContentPane(lastPage);
    }//GEN-LAST:event_lastPageBActionPerformed

    public void addPromptDataToTable() {
        data = new Object[prompts.size()][2];
        
        for(int i = 0; i < data.length; i++) {
            data[i][0] = prompts.get(i).getQue();
            data[i][1] = prompts.get(i).getIsAns();
            ((DefaultTableModel) jTable1.getModel()).addRow(data[i]);
        }
    }
    
    //Set within Netbeans GUI builder auto-generated code
    public class TextWrapRenderer extends DefaultTableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            int fontHeight = this.getFontMetrics(this.getFont()).getHeight();
            int linesOfText = this.getFontMetrics(this.getFont()).stringWidth(value.toString()) / table.getColumnModel().getColumn(0).getWidth() + 1;
            table.setRowHeight(row, fontHeight * linesOfText + 4);
            this.setVerticalAlignment(SwingConstants.TOP);
            this.setVerticalTextPosition(SwingConstants.TOP);
            this.setValue("<HTML>" + value.toString() + "</HTML>");
            return this;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton lastPageB;
    private javax.swing.JButton saveValsB;
    // End of variables declaration//GEN-END:variables
}
